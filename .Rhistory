install.packages("slidify")
source("httcp://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
install.packages("ggplot2")
find.package("devtools")
installed.packages("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
f <- function(x){
g <- function(y) {
y + z
}
z <- 4
x+g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(datasets)
data("iris")
?iris
mean.Sepal.length(virginica)
mean(sepal.lengthÂ§virginica)
mean(sepal.length)
mean(Sepal.Length(virginica))
mean(iris[iris$Species == "virginica",]$Sepal.Length)
data("mtcars")
?mtcars
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",)
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b"
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687"
)
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b",
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687")
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b",
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687")
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b",
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "fd5786ff4e3d8b9a4f3b",
secret = "74b07f65a19ae9b9df1aa8036989eb334718e687")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
library(httr)
ouath_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "93a29d18517efb8999e1",
secret = "d6c6d3f6aeae3c2931caecae353c6abfd59d5779")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httr)
> oauth_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "93a29d18517efb8999e1",
secret = "d6c6d3f6aeae3c2931caecae353c6abfd59d5779")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
app <- oauth_app("github",
key = "93a29d18517efb8999e1",
secret = "d6c6d3f6aeae3c2931caecae353c6abfd59d5779")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), app)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "4b6c564fec1bea0dba29",
secret = "3425cfc0a4a05b9b01195992d21ddfb038606b71")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
library(sqldf)
library("sqldf")
install(sqldf)
install.packages("sqldf")
install.packages("RSQLite")
install.packages("tcltk2")
libarry(sqldf)
library(sqldf)
acs <- read.cs("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", header=T, sep=",")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", header=T, sep=",")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf(unique(acs$AGEP))
hurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(hurl)
htmlCode <-readlines(con)
htmlCode <- readLines(con)
close(con)
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
hurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
con <- url(hurl)
code <- readLines(con)
close(con)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
fileurl1 = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
dst1 = 'C:\\Users\user\\Dropbox\\Coursera\\Quiz3'
download.file(fileurl1, dst1, method = 'curl')
data1 = read.csv(dst1)
agricultureLogical = data1$ACR == 3 & data1$AGS == 6
head(which(agricultureLogical), 3)
fileurl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dst1 = "C:\\Users\user\\Dropbox\\Coursera\\Quiz3"
fileurl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dst1 = "C:\\Users\\user\\Dropbox\\Coursera\\Quiz3"
download.file(fileurl1, dst1, method = 'curl')
fileurl1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl1, dst1, method = 'curl')
download.file(fileurl1, dst1, method = 'curl')
library(jpeg)
library(data.table)
library(dplyr)
fileurl1 = 'http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
dst1 = "C:\\Users\\user\\Dropbox\\Coursera"
download.file(fileurl1, dst1, method = 'curl')
data1 = read.csv(dst1)
agricultureLogical = data1$ACR == 3 & data1$AGS == 6
head(which(agricultureLogical), 3)
download.file(fileurl1, dst1, method = 'curl')
> download.file(fileurl1, dst1, method = 'auto')
download.file(fileurl1, dst1, method = 'auto')
dst1 = "C:\\Users\\user\\Dropbox\\Coursera\\try.csv"
download.file(fileurl1, dst1, method = 'curl')
data <- read.csv(dst1, header = T)
agricultureLogical <- with(data, ACR == 3 & AGS == 6)
which(agricultureLogical)[1:3]
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
install.packages("shiny")
> x <- rnorm(100)
> hist(x)
x <- rnorm(100)
hist(x)
hist(x)
plots(w , y, pch = 20)
y <- rnorm(100)
plot(x,y)
dev.cur()
ibrary("data.table")
library("lubridate")
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
downloadFile <- "C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.zip"
householdFile <- "C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.txt"
if (!file.exists(householdFile)) {
download.file(url, downloadFile, method = "curl")
unzip(downloadFile, overwrite = T, exdir = "./Data")
}
plotData <- read.table(householdFile, header=T, sep=";", na.strings="?")
finalData <- plotData[plotData$Date %in% c("1/2/2007","2/2/2007"),]
SetTime <-strptime(paste(finalData$Date, finalData$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
finalData <- cbind(SetTime, finalData)
library("data.table")
library("lubridate")
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
householdFile <- "C:\\User\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.txt"
downloadFile <- "C:\\User\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.zip"
if (!file.exists(householdFile)) {
download.file(url, destfile='C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1\\source data\\power_consumption.zip', method = "curl")
unzip(downloadFile, overwrite = T, exdir = "./Data")
}
plotData <- read.table(householdFile, header=T, sep=";", na.strings="?")
finalData <- plotData[plotData$Date %in% c("1/2/2007","2/2/2007"),]
SetTime <-strptime(paste(finalData$Date, finalData$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
finalData <- cbind(SetTime, finalData)
library("data.table")
library("lubridate")
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
url <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
householdFile <- "C:\\User\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.txt"
downloadFile <- "C:\\User\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.zip"
if (!file.exists(householdFile)) {
download.file(url, destfile='C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1\\source data\\power_consumption.zip', method = "curl")
unzip(downloadFile, overwrite = T, exdir = "./Data")
}
plotData <- read.table(householdFile, header=T, sep=";", na.strings="?")
finalData <- plotData[plotData$Date %in% c("1/2/2007","2/2/2007"),]
SetTime <-strptime(paste(finalData$Date, finalData$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
finalData <- cbind(SetTime, finalData)
library("data.table")
library("lubridate")
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
url <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
householdFile <- "C:\\User\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.txt"
downloadFile <- "C:\\User\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.zip"
if (!file.exists(householdFile)) {
download.file(url, destfile='C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\power_consumption.zip', method = "curl")
unzip(downloadFile, overwrite = T, exdir = "./Data")
}
plotData <- read.table(householdFile, header=T, sep=";", na.strings="?")
finalData <- plotData[plotData$Date %in% c("1/2/2007","2/2/2007"),]
SetTime <-strptime(paste(finalData$Date, finalData$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
finalData <- cbind(SetTime, finalData)
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
url <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
householdFile <- "C:\\User\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.txt"
downloadFile <- "C:\\User\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\household_power_consumption.zip"
if (!file.exists(householdFile)) {
download.file(url, destfile='C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data\\power_consumption.zip', method = "curl")
unzip(downloadFile, overwrite = T, exdir = "C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1\\Data")
}
plotData <- read.table(householdFile, header=T, sep=";", na.strings="?")
finalData <- plotData[plotData$Date %in% c("1/2/2007","2/2/2007"),]
SetTime <-strptime(paste(finalData$Date, finalData$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
finalData <- cbind(SetTime, finalData)
library(data.table)
library(lubridate)
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
if (!file.exists('source data')) {
dir.create('source data')
}
# check to see if the existing tidy data set exists; if not, make it...
if (!file.exists('source data\\power_consumption.txt')) {
# download the zip file and unzip
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(file.url,destfile='source data\\power_consumption.zip')
unzip('source data/power_consumption.zip',exdir='source data',overwrite=TRUE)
# read the raw table and limit to 2 days
variable.class<-c(rep('character',2),rep('numeric',7))
power.consumption<-read.table('source data/household_power_consumption.txt',header=TRUE,
sep=';',na.strings='?',colClasses=variable.class)
power.consumption<-power.consumption[power.consumption$Date=='1/2/2007' | power.consumption$Date=='2/2/2007',]
# clean up the variable names and convert date/time fields
cols<-c('Date','Time','GlobalActivePower','GlobalReactivePower','Voltage','GlobalIntensity',
'SubMetering1','SubMetering2','SubMetering3')
colnames(power.consumption)<-cols
power.consumption$DateTime<-dmy(power.consumption$Date)+hms(power.consumption$Time)
power.consumption<-power.consumption[,c(10,3:9)]
# write a clean data set to the directory
write.table(power.consumption,file='source data/power_consumption.txt',sep='|',row.names=FALSE)
} else {
power.consumption<-read.table('source data/power_consumption.txt',header=TRUE,sep='|')
power.consumption$DateTime<-as.POSIXlt(power.consumption$DateTime)
}
# remove the large raw data set
if (file.exists('source data/household_power_consumption.txt')) {
x<-file.remove('source data/household_power_consumption.txt')
}
hist(finalData$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(power.consumption$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
finalData <- source data[household_power_consumption$Date %in% c("1/2/2007","2/2/2007"),]
SetTime <-strptime(paste(finalData$Date, finalData$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
finalData <- cbind(SetTime, finalData)
finalData <- household_power_consumption[household_power_consumption$Date %in% c("1/2/2007","2/2/2007"),]
SetTime <-strptime(paste(finalData$Date, finalData$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
finalData <- cbind(SetTime, finalData)
finalData <- power.consumption[power.consumption$Date %in% c("1/2/2007","2/2/2007"),]
SetTime <-strptime(paste(finalData$Date, finalData$Time, sep=" "),"%d/%m/%Y %H:%M:%S")
finalData <- cbind(SetTime, finalData)
hist(finalData$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
hist(power.consumption$GlobalActivePower,main='Global Active Power',xlab='Global Active Power (kilowatts)',col='red')
dev.off()
hist(power.consumption$GlobalActivePower,main='Global Active Power',xlab='Global Active Power (kilowatts)',col='red')
library(data.table)
library(lubridate)
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
if (!file.exists('source data')) {
dir.create('source data')
}
if (!file.exists('source data\\power_consumption.txt')) {
url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(url,destfile='source data\\power_consumption.zip')
unzip('source data/power_consumption.zip',exdir='source data',overwrite=TRUE)
variable.class<-c(rep('character',2),rep('numeric',7))
power.consumption<-read.table('source data/household_power_consumption.txt',header=TRUE,
sep=';',na.strings='?',colClasses=variable.class)
power.consumption<-power.consumption[power.consumption$Date=='1/2/2007' , power.consumption$Date=='2/2/2007',]
cols<-c('Date','Time','GlobalActivePower','GlobalReactivePower','Voltage','GlobalIntensity',
'SubMetering1','SubMetering2','SubMetering3')
colnames(power.consumption)<-cols
power.consumption$DateTime<-dmy(power.consumption$Date)+hms(power.consumption$Time)
power.consumption<-power.consumption[,c(10,3:9)]
write.table(power.consumption,file='source data/power_consumption.txt',sep=',',row.names=FALSE)
} else {
power.consumption<-read.table('source data/power_consumption.txt',header=TRUE,sep=',')
power.consumption$DateTime<-as.POSIXlt(power.consumption$DateTime)
}
if (file.exists('source data/household_power_consumption.txt')) {
x<-file.remove('source data/household_power_consumption.txt')
}
head(power.consumption)
library(data.table)
library(lubridate)
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
if (!file.exists('source data')) {
dir.create('source data')
}
if (!file.exists('source data\\power_consumption.txt')) {
url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(url,destfile='source data\\power_consumption.zip')
unzip('source data/power_consumption.zip',exdir='source data',overwrite=TRUE)
variable.class<-c(rep('character',2),rep('numeric',7))
power.consumption<-read.table('source data/household_power_consumption.txt',header=TRUE,
sep=';',na.strings='?',colClasses=variable.class)
power.consumption<-power.consumption[power.consumption$Date=='1/2/2007' , power.consumption$Date=='2/2/2007',]
cols<-c('Date','Time','GlobalActivePower','GlobalReactivePower','Voltage','GlobalIntensity',
'SubMetering1','SubMetering2','SubMetering3')
colnames(power.consumption)<-cols
power.consumption$DateTime<-dmy(power.consumption$Date)+hms(power.consumption$Time)
power.consumption<-power.consumption[,c(10,3:9)]
write.table(power.consumption,file='source data/power_consumption.txt',sep=',',row.names=FALSE)
} else {
power.consumption<-read.table('source data/power_consumption.txt',header=TRUE,sep=',')
power.consumption$DateTime<-as.POSIXlt(power.consumption$DateTime)
}
if (file.exists('source data/household_power_consumption.txt')) {
x<-file.remove('source data/household_power_consumption.txt')
}
head(power.consumption)
library(data.table)
library(lubridate)
setwd("C:\\Users\\user\\Dropbox\\Coursera\\ExData_Plotting1")
if (!file.exists('source data')) {
dir.create('source data')
}
if (!file.exists('source data\\power_consumption.txt')) {
url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
download.file(url,destfile='source data\\power_consumption.zip')
unzip('source data/power_consumption.zip',exdir='source data',overwrite=TRUE)
variable.class<-c(rep('character',2),rep('numeric',7))
power.consumption<-read.table('source data/household_power_consumption.txt',header=TRUE,
sep=';',na.strings='?',colClasses=variable.class)
power.consumption<-power.consumption[power.consumption$Date=='1/2/2007' | power.consumption$Date=='2/2/2007',]
cols<-c('Date','Time','GlobalActivePower','GlobalReactivePower','Voltage','GlobalIntensity',
'SubMetering1','SubMetering2','SubMetering3')
colnames(power.consumption)<-cols
power.consumption$DateTime<-dmy(power.consumption$Date)+hms(power.consumption$Time)
power.consumption<-power.consumption[,c(10,3:9)]
write.table(power.consumption,file='source data/power_consumption.txt',sep='|',row.names=FALSE)
} else {
power.consumption<-read.table('source data/power_consumption.txt',header=TRUE,sep='|')
power.consumption$DateTime<-as.POSIXlt(power.consumption$DateTime)
}
if (file.exists('source data/household_power_consumption.txt')) {
x<-file.remove('source data/household_power_consumption.txt')
}
head(power.consumption)
if (!file.exists('plots')) {
dir.create('plots')
}
source('read_data.R')
png(filename='plots/plot1.png',width=480,height=480,units='px')
hist(power.consumption$GlobalActivePower,main='Global Active Power',xlab='Global Active Power (kilowatts)',col='red')
x<-dev.off()
hist(power.consumption$GlobalActivePower, power.consumption$DateTime, ylab='Global Active Power (kilowatts)', type = 1)
plot(power.consumption$GlobalActivePower, power.consumption$DateTime, ylab='Global Active Power (kilowatts)', type = 1)
plot(power.consumption$DateTime,power.consumption$GlobalActivePower,ylab='Global Active Power (kilowatts)', xlab='', type='l')
plot(power.consumption$DateTime,power.consumption$GlobalActivePower,ylab='Global Active Power (kilowatts)', xlab='')
plot(power.consumption$DateTime,power.consumption$GlobalActivePower,ylab='Global Active Power (kilowatts)', type='l')
if (!file.exists('plots')) {
dir.create('plots')
}
source('read_data.R')
png(filename='plots/plot2.png',width=480,height=480,units='px')
plot(power.consumption$DateTime,power.consumption$GlobalActivePower,ylab='Global Active Power (kilowatts)', type='l')
x<-dev.off()
if (!file.exists('plots')) {
dir.create('plots')
}
source('scripts/get_and_clean_data.R')
png(filename='plots/plot3.png',width=480,height=480,units='px')
lbls<-c('Sub_metering_1','Sub_metering_2','Sub_metering_3')
plot(power.consumption$DateTime,power.consumption$SubMetering1,type='l',col=lncol[1],xlab='',ylab='Energy sub metering')
lines(power.consumption$DateTime,power.consumption$SubMetering2,col=lncol[2])
lines(power.consumption$DateTime,power.consumption$SubMetering3,col=lncol[3])
lncol<-c('black','red','blue')
legend('topright',legend=lbls,col=lncol,lty='solid')
x<-dev.off()
if (!file.exists('plots')) {
dir.create('plots')
}
source('scripts/get_and_clean_data.R')
png(filename='plots/plot3.png',width=480,height=480,units='px')
lncol<-c('black','red','blue')
lbls<-c('Sub_metering_1','Sub_metering_2','Sub_metering_3')
plot(power.consumption$DateTime,power.consumption$SubMetering1,type='l',col=lncol[1],xlab='',ylab='Energy sub metering')
lines(power.consumption$DateTime,power.consumption$SubMetering2,col=lncol[2])
lines(power.consumption$DateTime,power.consumption$SubMetering3,col=lncol[3])
legend('topright',legend=lbls,col=lncol,lty='solid')
x<-dev.off()
if (!file.exists('plots')) {
dir.create('plots')
}
source('scripts/read_data.R')
png(filename='plots/plot3.png',width=480,height=480,units='px')
lncol<-c('black','red','blue')
lbls<-c('Sub_metering_1','Sub_metering_2','Sub_metering_3')
plot(power.consumption$DateTime,power.consumption$SubMetering1,type='l',col=lncol[1],xlab='',ylab='Energy sub metering')
lines(power.consumption$DateTime,power.consumption$SubMetering2,col=lncol[2])
lines(power.consumption$DateTime,power.consumption$SubMetering3,col=lncol[3])
legend('topright',legend=lbls,col=lncol,lty='solid')
x<-dev.off()
if (!file.exists('plots')) {
dir.create('plots')
}
source('read_data.R')
png(filename='plots/plot3.png',width=480,height=480,units='px')
lncol<-c('black','red','blue')
lbls<-c('Sub_metering_1','Sub_metering_2','Sub_metering_3')
plot(power.consumption$DateTime,power.consumption$SubMetering1,type='l',col=lncol[1],xlab='',ylab='Energy sub metering')
lines(power.consumption$DateTime,power.consumption$SubMetering2,col=lncol[2])
lines(power.consumption$DateTime,power.consumption$SubMetering3,col=lncol[3])
legend('topright',legend=lbls,col=lncol,lty='solid')
x<-dev.off()
if (!file.exists('plots')) {
dir.create('plots')
}
source('read_data.R')
png(filename='plots/plot4.png',width=480,height=480,units='px')
par(mfrow=c(2,2))
plot(power.consumption$DateTime,power.consumption$GlobalActivePower,ylab='Global Active Power',xlab='',type='l')
plot(power.consumption$DateTime,power.consumption$Voltage,xlab='datetime',ylab='Voltage',type='l')
lncol<-c('black','red','blue')
lbls<-c('Sub_metering_1','Sub_metering_2','Sub_metering_3')
plot(power.consumption$DateTime,power.consumption$SubMetering1,type='l',col=lncol[1],xlab='',ylab='Energy sub metering')
lines(power.consumption$DateTime,power.consumption$SubMetering2,col=lncol[2])
lines(power.consumption$DateTime,power.consumption$SubMetering3,col=lncol[3])
plot(power.consumption$DateTime,power.consumption$GlobalReactivePower,xlab='datetime',ylab='Global_reactive_power',type='l')
x<-dev.off()
